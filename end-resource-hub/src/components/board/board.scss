$general-shadow:rgba(0, 0, 0, 0.4);
$select-image: url(../../assets/SVG/select.svg);
.boarder {
    --cell-size: 10rem;
    display: flex;
    width: fit-content;
    padding: 4rem;
    margin: 10px;
    margin: auto;
    border-radius: 2px;
    background-color: #ccc;
    box-shadow: 0 0 8px $general-shadow;
    transition: all 0.3s;
    gap: 8rem;
    > div.cell {
        height: var(--cell-size);
        width: var(--cell-size);
        position: relative;
        transition: all 0.3s;
        perspective: 1000px;
        transform-style: preserve-3d;
        &.hover {
            z-index: 2;
            > .baseR {
                transform-style: preserve-3d;
                background: rgba(0, 0, 0, .75);
                &::after {
                    opacity: 1;
                    filter: drop-shadow(0 0 4px $general-shadow) contrast(1.05) blur(0);
                }
            }
        }
        &.selected {
            transform: scale(1.05);
            z-index: 2;
            > .baseR {
                background: rgba(0, 0, 0, .75);
                &::after {
                    opacity: 1;
                    filter: drop-shadow(0 0 1px $general-shadow) contrast(1) blur(0);
                }
            }
        }
        &.norm {
            use {
                transform: translateY(24%);
            }
            use + use {
                transform: translate(var(--x2), var(--y2)) scale(var(--s2));
            }
            &::after {
                content: '';
                position: absolute;
                top: -12.5%;
                left: -12.5%;
                width: calc(1.25* var(--cell-size));
                height: calc(1.25* var(--cell-size));
                border: 6px solid #f5f5f5;
                border-radius: 50%;
                box-sizing: border-box;
                filter: drop-shadow(0px 10px 2.5px $general-shadow);
                transition: all 0.3s;
            }
            &:hover::after {
                filter: drop-shadow(0px 2.5px 2.5px $general-shadow)
            }
        }
        &.ult {
            use {
                transform: translate(var(--x3), var(--y3)) scale(var(--s3));
            }
            &::after {
                content: '';
                position: absolute;
                top: -14%;
                left: -14%;
                width: calc(1.28* var(--cell-size));
                height: calc(1.28* var(--cell-size));
                border: 6px solid #f5f5f5;
                border-radius: 50%;
                box-sizing: border-box;
                filter: drop-shadow(0px 10px 2.5px $general-shadow);
                transition: all 0.3s;
            }
            &::before {
                content: '';
                position: absolute;
                top: -8%;
                left: -8%;
                width: calc(1.16* var(--cell-size));
                height: calc(1.16* var(--cell-size));
                border: 10px solid #f5f5f5;
                border-radius: 50%;
                box-sizing: border-box;
                box-shadow: 0 0 4px $general-shadow;
                z-index: 1;
                transition: all 0.3s;
            }
            &:hover::after, &:hover::before {
                filter: drop-shadow(0px 2.5px 2.5px $general-shadow)
            }
        }
        > .baseR {
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, .65);
            border-radius: 50%;
            box-shadow: 0 0 8px $general-shadow;
            display: flex;
            transition: all 0.3s;
            z-index: 1;
            &::after {
                content: '';
                position: absolute;
                top: calc(var(--coef) * -50%);
                left: calc(var(--coef) * -50%);
                width: calc((1 + var(--coef)) * var(--cell-size));
                height: calc((1 + var(--coef)) * var(--cell-size));
                background-image: $select-image;
                z-index: 1;
                transition: opacity 0.3s, filter 0.3s;
                opacity: 0;
                filter: drop-shadow(0 0 4px $general-shadow) contrast(1.05) blur(.3rem);
            }
            > .herald {
                width: 100%;
                height: 100%;
                border-radius: 50%;
            }
        }
    }
}
svg.icon {
    position: absolute;
    top: calc(var(--modi) * 50%);
    left: calc(var(--modi) * 50%);
    width: calc((1 - var(--modi)) * 100%);
    height: calc((1 - var(--modi)) * 100%);
    overflow: visible;
    > use {
        filter: drop-shadow(0px 4px 2px #0009);
        transition: all .1s linear;
    }
}